#!/usr/bin/env python
import argparse
import os

try:
    import whitematteranalysis as wma
except:
    print "<wm_extract_measurement.py> Error importing white matter analysis package\n"
    raise

#-----------------
# Parse arguments
#-----------------
parser = argparse.ArgumentParser(
    description="Extract scalar measurement of fiber cluster.",
    epilog="Written by Fan Zhang, fzhang@bwh.harvard.edu")

parser.add_argument("-v", "--version",
    action="version", default=argparse.SUPPRESS,
    version='1.0',
    help="Show program's version number and exit")
parser.add_argument(
    'inputDirectory',
    help='Directory of fiber clustering results obtained by <wm_cluster_from_altas.py> of multiple subjects.')
parser.add_argument(
    'outputDirectory',
    help='Directory of output CSV files of fiber scalar measurement (computed using Slicer FiberTractMeasurements module).')
parser.add_argument(
    'Slicer',
    help='Path of 3D Slicer.')

args = parser.parse_args()

if not os.path.isdir(args.inputDirectory):
    print "Error: Input directory", args.inputDirectory, "does not exist."
    exit()

if not os.path.isdir(args.Slicer):
    print "Error: 3D Slicer", args.Slicer, "does not exist."
    exit()

module_FTSM = os.path.join(args.Slicer, 'lib/Slicer-4.5/cli-modules/FiberTractMeasurements')

outdir = args.outputDirectory
if not os.path.exists(outdir):
    print "Output directory", outdir, "does not exist, creating it."
    os.makedirs(outdir)

print "<wm_extract_measurement.py>. Starting scalar measurement extraction."
print ""
print "=====input directory======\n", args.inputDirectory
print "=====output directory=====\n", args.outputDirectory
print "=====3D Slicer Module FiberTractMeasurements====\n", module_FTSM
print "=========================="

sub_dirs = os.listdir(args.inputDirectory)

print "<wm_extract_measurement.py> found", len(sub_dirs), "sub directories."

subject_list = []
for dir in sub_dirs:
    # Assume folder name ends with '_reg' as generated by <wm_cluster_from_altas.py>
    if dir.endswith('_reg'):
        subject_list.append(dir)

print "<wm_extract_measurement.py> found", len(subject_list), "subjects."

count = 1
for sub in subject_list:
    sub_name = sub.replace('_reg', '')
    print " -", count, "/", len(subject_list), " subject id:", sub_name
    count = count + 1
    os.system(module_FTSM + \
              ' --inputtype Fibers_File_Folder --format Column_Hierarchy --separator Tab ' + \
              ' --inputdirectory ' + os.path.join(args.inputDirectory, sub) + \
              ' --outputfile ' + os.path.join(args.outputDirectory, sub_name+'.csv ') + \
              ' > ' + os.path.join(args.outputDirectory, 'tmp'+sub_name))
    os.remove(os.path.join(args.outputDirectory, 'tmp'+sub_name))

print "<wm_extract_measurement.py> Measurements from", count, "subjects were extracted."
